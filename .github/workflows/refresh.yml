name: Refresh Spotify Playlist

on:
  # Manual trigger with optional inputs
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Don't write to Spotify (preview only)"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]
      force_profile:
        description: "Override time-of-day window (morning|afternoon|evening|focus)"
        required: false
        default: ""
        type: choice
        options: ["", "morning", "afternoon", "evening", "focus"]
      n_tracks:
        description: "Override track count (leave blank to use script default)"
        required: false
        default: ""
        type: string

  # Scheduler (runs every hour). Adjust as you like.
  schedule:
    - cron: "0 * * * *"

permissions:
  contents: read

concurrency:
  group: refresh-spotify-playlist
  cancel-in-progress: false

jobs:
  refresh:
    runs-on: ubuntu-latest

    env:
      # --- Required secrets (set these in your repo Settings → Secrets and variables → Actions → Secrets) ---
      SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
      SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
      SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
      PLAYLIST_ID: ${{ secrets.PLAYLIST_ID }}

      # --- Optional repository "Variables" (Settings → Secrets and variables → Actions → Variables) ---
      # If not set, your refresh.py should fall back to sane defaults.
      COUNTRY_MARKET: ${{ vars.COUNTRY_MARKET }}        # e.g. IN or US
      TIMEZONE: ${{ vars.TIMEZONE }}                    # e.g. Asia/Kolkata
      NOVELTY_DAYS: ${{ vars.NOVELTY_DAYS }}            # e.g. 30
      NOVELTY_REPEAT_FRACTION: ${{ vars.NOVELTY_REPEAT_FRACTION }}  # e.g. 0.10
      FAMILIAR_RATIO: ${{ vars.FAMILIAR_RATIO }}        # e.g. 0.60 (for 60/40)

      # Inputs from workflow_dispatch forwarded as env (script should read these if present)
      INPUT_DRY_RUN: ${{ github.event.inputs.dry_run }}
      INPUT_FORCE_PROFILE: ${{ github.event.inputs.force_profile }}
      INPUT_N_TRACKS: ${{ github.event.inputs.n_tracks }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install spotipy python-dateutil pytz requests tenacity
          fi

      - name: Run refresh.py
        env:
          # pass inputs in a simple way the script can read (string booleans are fine)
          DRY_RUN: ${{ env.INPUT_DRY_RUN }}
          FORCE_PROFILE: ${{ env.INPUT_FORCE_PROFILE }}
          N_TRACKS: ${{ env.INPUT_N_TRACKS }}
        run: |
          set -e
          echo "Starting refresh at $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          python refresh.py
          echo "Finished refresh at $(date -u +"%Y-%m-%dT%H:%M:%SZ")"

      - name: Attach report to job summary (if present)
        if: always()
        run: |
          if [ -f report.md ]; then
            echo "### Refresh Report" >> $GITHUB_STEP_SUMMARY
            cat report.md >> $GITHUB_STEP_SUMMARY
          fi
          if [ -f run_log.jsonl ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "<details><summary>Recent run_log.jsonl (tail)</summary>" >> $GITHUB_STEP_SUMMARY
            tail -n 200 run_log.jsonl >> $GITHUB_STEP_SUMMARY || true
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload artifacts (report & logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: refresh-artifacts-${{ github.run_id }}
          path: |
            report.md
            run_log.jsonl
          if-no-files-found: ignore
